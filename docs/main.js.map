{
  "version": 3,
  "sources": ["../src/elements/bloco.element.ts", "../src/main.ts"],
  "sourcesContent": ["function fetchTemplate(src: string) {\n  const parser = new DOMParser()\n\n  return new Promise<Document>(async (resolve, reject) => {\n    try {\n      resolve(\n        parser.parseFromString(await (await fetch(src)).text(), 'text/html')\n      )\n    } catch (err) {\n      reject(err)\n    }\n  })\n}\n\nexport class LetraBlocoElement extends HTMLElement {\n  static get observedAttributes() {\n    return ['letra', 'tons']\n  }\n\n  template: HTMLTemplateElement\n\n  letra = ''\n\n  tons = 'amarelo'\n\n  connectedCallback() {\n    this.attachShadow({ mode: 'open' })\n    fetchTemplate('templates/bloco.html').then((doc) => {\n      const template = doc.querySelector('template').content\n      const style = doc.querySelector('style')\n      \n      template.querySelector('span').textContent = this.letra\n      this.classList.add('tons', this.tons)\n\n      this.shadowRoot.appendChild(style)\n      this.shadowRoot.appendChild(template)\n    })\n  }\n\n  attributeChangedCallback(name: string, prev: string, next: string) {\n    if (this.template) this.template.textContent = next\n    this[name] = next\n  }\n}\ncustomElements.define('letra-bloco', LetraBlocoElement)\n", "export * from './elements/bloco.element'\n\nclass Opcao {\n  src: string;\n  label: string;\n}\n\nconst get = async (src: string): Promise<Opcao[]> => {\n  return fetch(src).then(response => response.json())\n}\n\nfunction preparaOpcao(opcao: Opcao, template: HTMLTemplateElement) {\n  const clone = template.content.cloneNode(true) as HTMLElement\n\n  const caption = clone.querySelector('figcaption')\n  const button = clone.querySelector('button')\n  const image = clone.querySelector('img')\n\n  caption.textContent = opcao.label\n  button.value = opcao.src\n  image.alt = opcao.label\n  if (opcao.src) {\n\n    image.src = opcao.src\n  }\n  else {\n    image.remove()\n  }\n  return clone\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const template = document.querySelector<HTMLTemplateElement>('#item-da-lista')\n  const background = document.querySelector<HTMLImageElement>('#background')\n  const ilustracao = document.querySelector<HTMLImageElement>('#ilustracao')\n  const cartao = document.querySelector<HTMLDivElement>('#cartao')\n  const imprimir = document.querySelector<HTMLDivElement>('#Imprimir')\n  console.log(imprimir)\n  imprimir.onclick = () => {\n    document.body.classList.add('imprimir')\n    print()\n  }\n  const ilustracoes = document.querySelector('#ilustracoes')\n  const fundos = document.querySelector('#fundos')\n\n  get('api/ilustracoes.json').then(opcoes => {\n    opcoes.forEach(opcao => ilustracoes.appendChild(\n      preparaOpcao(opcao, template)\n    ))\n\n    const buttons = ilustracoes.querySelectorAll('button')\n    buttons.forEach((button) => button.onclick = () => {\n      ilustracao.querySelector(\"img\").src = button.value\n    })\n  })\n\n  get('api/fundos.json').then(opcoes => {\n    opcoes.forEach(opcao => fundos.appendChild(\n      preparaOpcao(opcao, template)\n    ))\n\n    const buttons = fundos.querySelectorAll('button')\n    buttons.forEach((button) => button.onclick = () => {\n      if (button.value) {\n        background.style.display= \"block\"\n        background.src = button.value\n      }\n      else {\n        background.style.display= \"none\"\n      }\n    })\n  })\n\n})\n"],
  "mappings": ";;AAAA,yBAAuB,KAAa;AAClC,UAAM,SAAS,IAAI;AAEnB,WAAO,IAAI,QAAkB,OAAO,SAAS,WAAW;AACtD,UAAI;AACF,gBACE,OAAO,gBAAgB,MAAO,OAAM,MAAM,MAAM,QAAQ;AAAA,eAEnD,KAAP;AACA,eAAO;AAAA;AAAA;AAAA;AAKN,wCAAgC,YAAY;AAAA,IAA5C,cAdP;AAcO;AAOL,mBAAQ;AAER,kBAAO;AAAA;AAAA,eARI,qBAAqB;AAC9B,aAAO,CAAC,SAAS;AAAA;AAAA,IASnB,oBAAoB;AAClB,WAAK,aAAa,CAAE,MAAM;AAC1B,oBAAc,wBAAwB,KAAK,CAAC,QAAQ;AAClD,cAAM,WAAW,IAAI,cAAc,YAAY;AAC/C,cAAM,QAAQ,IAAI,cAAc;AAEhC,iBAAS,cAAc,QAAQ,cAAc,KAAK;AAClD,aAAK,UAAU,IAAI,QAAQ,KAAK;AAEhC,aAAK,WAAW,YAAY;AAC5B,aAAK,WAAW,YAAY;AAAA;AAAA;AAAA,IAIhC,yBAAyB,MAAc,MAAc,MAAc;AACjE,UAAI,KAAK;AAAU,aAAK,SAAS,cAAc;AAC/C,WAAK,QAAQ;AAAA;AAAA;AAGjB,iBAAe,OAAO,eAAe;;;ACrCrC,MAAM,MAAM,OAAO,QAAkC;AACnD,WAAO,MAAM,KAAK,KAAK,cAAY,SAAS;AAAA;AAG9C,wBAAsB,OAAc,UAA+B;AACjE,UAAM,QAAQ,SAAS,QAAQ,UAAU;AAEzC,UAAM,UAAU,MAAM,cAAc;AACpC,UAAM,SAAS,MAAM,cAAc;AACnC,UAAM,QAAQ,MAAM,cAAc;AAElC,YAAQ,cAAc,MAAM;AAC5B,WAAO,QAAQ,MAAM;AACrB,UAAM,MAAM,MAAM;AAClB,QAAI,MAAM,KAAK;AAEb,YAAM,MAAM,MAAM;AAAA,WAEf;AACH,YAAM;AAAA;AAER,WAAO;AAAA;AAGT,WAAS,iBAAiB,oBAAoB,MAAM;AAClD,UAAM,WAAW,SAAS,cAAmC;AAC7D,UAAM,aAAa,SAAS,cAAgC;AAC5D,UAAM,aAAa,SAAS,cAAgC;AAC5D,UAAM,SAAS,SAAS,cAA8B;AACtD,UAAM,WAAW,SAAS,cAA8B;AACxD,YAAQ,IAAI;AACZ,aAAS,UAAU,MAAM;AACvB,eAAS,KAAK,UAAU,IAAI;AAC5B;AAAA;AAEF,UAAM,cAAc,SAAS,cAAc;AAC3C,UAAM,SAAS,SAAS,cAAc;AAEtC,QAAI,wBAAwB,KAAK,YAAU;AACzC,aAAO,QAAQ,WAAS,YAAY,YAClC,aAAa,OAAO;AAGtB,YAAM,UAAU,YAAY,iBAAiB;AAC7C,cAAQ,QAAQ,CAAC,WAAW,OAAO,UAAU,MAAM;AACjD,mBAAW,cAAc,OAAO,MAAM,OAAO;AAAA;AAAA;AAIjD,QAAI,mBAAmB,KAAK,YAAU;AACpC,aAAO,QAAQ,WAAS,OAAO,YAC7B,aAAa,OAAO;AAGtB,YAAM,UAAU,OAAO,iBAAiB;AACxC,cAAQ,QAAQ,CAAC,WAAW,OAAO,UAAU,MAAM;AACjD,YAAI,OAAO,OAAO;AAChB,qBAAW,MAAM,UAAS;AAC1B,qBAAW,MAAM,OAAO;AAAA,eAErB;AACH,qBAAW,MAAM,UAAS;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
